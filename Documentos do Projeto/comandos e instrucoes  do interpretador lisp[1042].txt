FUNÇÕES LISP DO INTERPRETADOR:

	---> função Car (obtem o primeiro elemento da lista, ou a primeira lista.
	---> função Cdr (obtém a lista cauda (lista menos o primeiro elemento).
	---> adição (operador +): soma os elementos da lista, e retorna uma lista com a soma.
	---> subtração (operador -): faz a diferença dos elementos da lista, e retorna uma lista com a diferença.
	---> multiplicação (operador *): multiplica os elementos da lista, e retorna uma lista com a multiplicação feita.
	---> divisão: (operador /): divide os elementos da lista, e retorna uma lista com  o valor da divisão.
	---> maior: (operador >): encontra o maior elemento entre listas.
	---> menor: (operador <): encontra o menor elemento entre listas.
	---> maior ou igual: (operador >=): encontra o maior ou igual elemento entre listas.
	---> menor ou igual: (operador <=): encontra o menor ou igual elemento entre listas.
	---> igual: (operador =): encontra o igual elemento de uma lista.	
	---> cond: equivalente à instrução If das linguagens estruturadas ou orientada a objetos.
	---> defun: defini uma lista lisp como uma função lisp.
	---> cadxxxr: uma sequencia programável de funções car e cdr, útil para extrair um elemento numa determinada posição.
	---> cond: equivalente à instrução "switch" em linguagens modernas, como Java, C sharp,...
	---> if: recebe três listas: 1a. que avalia uma condicional na 1a. lista, se true, executa a 2a. lista- parâmetro, se false
a condicional, executa a 3a. lista parâmetro.
	---> cons: adiciona um elemento à lista de entrada.
	---> quote: trata a lista de entrada como uma lista.
	---> setq: modifica um valor de um elemento da lista.
	---> member: retorna T se o elemento de entrada desta função estiver na lista, NILL se não estiver.



	---> SaveInFile: grava em arquivo o texto de uma função.
	---> ReadInFile: lê um arquivo o texto de uma função, e retorna o texto como uma função lisp.


PREDICADOS LISTP:
	----> Null: retorna true se a entrada é nula.
	----> atom: retorna true se a entrada é um átomo.
	----> listp: retorna true se a entrada é uma lista.
	----> numberp: retorna true se a entrada é um número [int] ou [float].

